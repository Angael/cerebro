steps:
  - task: Cache@2
    inputs:
      key: 'pnpm | "$(Agent.OS)" | pnpm-lock.yaml'
      path: $(pnpm_config_cache)
    displayName: Cache pnpm

  - task: Cache@2
    displayName: Cache Turbo
    inputs:
      key: '"turbo" | "$(Agent.OS)" | "$(Build.SourceBranch)" | "$(Build.SourceVersion)"'
      # the keys are set up to first try the current branch or try to fetch main otherwise, to use main branch cache for feature branches
      restoreKeys: |
        "turbo" | "$(Agent.OS)" | "$(Build.SourceBranch)"
        "turbo" | "$(Agent.OS)" | "main"
        "turbo" | "$(Agent.OS)"
        "turbo"
      path: node_modules/.cache

  - script: |
      corepack enable
      corepack prepare pnpm@latest-8 --activate
      pnpm config set store-dir $(pnpm_config_cache)
    displayName: "Setup pnpm"

  - task: qetza.replacetokens.replacetokens-task.replacetokens@6
    inputs:
      sources: |
        **/.env.template
      tokenPattern: custom
      tokenPrefix: '{'
      tokenSuffix: '}'
      telemetryOptout: true

    displayName: "Replace tokens"

  - script: |
      mv apps/server/.env.template apps/server/.env
      mv apps/web/.env.template apps/web/.env

  - script: pnpm install
    displayName: "pnpm install"
  - script: pnpm lint
    displayName: "pnpm lint"
  - script: pnpm build
    displayName: "pnpm build"

  - script: |
      ls -l ./apps/server/dist
      ls -l ./apps/web/out
    displayName: "Check on dist"

  - script: |
      tar --exclude='node_modules' --exclude='.idea' --exclude='.azure' --exclude='.turbo' -czvf $(Build.ArtifactStagingDirectory)/artifact.tar.gz ./* .[!.]*
    displayName: "Compress build"

  - task: Bash@3
    displayName: cache_cleanup
    inputs:
      targetType: inline
      failOnStderr: true
      # this finds the files in the cache older than 4 days and removes them
      script: |
        find node_modules/.cache/turbo -mtime +4 -type f -delete

  - publish: $(Build.ArtifactStagingDirectory)/$(artifactName).tar.gz
    artifact: $(artifactName)