steps:
  - checkout: self

#  - task: NodeTool@0
#    inputs:
#      versionSpec: '22'
#    displayName: 'Install Node.js'

  - script: |
      rm -r ./apps/web
      rm -r ./apps/server
      rm -r ./packages/db
      rm -r ./packages/shared-types
    displayName: 'Keep only tests app'

  - script: npx playwright install chromium
    displayName: 'Install Playwright'

  - template: ./pnpm-install.yml

  - task: qetza.replacetokens.replacetokens-task.replacetokens@6
    inputs:
      sources: |
        **/.env.template
      tokenPattern: custom
      tokenPrefix: '{'
      tokenSuffix: '}'
      telemetryOptout: true
    displayName: "Replace tokens"

  - script: |
      cd apps/tests
      mv .env.template .env
      npx playwright test
    displayName: 'Run e2e tests'
    env:
      CI: 'true'

#  - task: PublishPipelineArtifact@1
#    inputs:
#      targetPath: playwright-report
#      artifact: playwright-report
#      publishLocation: 'pipeline'
#    condition: succeededOrFailed()
  - script: |
      ls -la
      pwd
      echo $(Pipeline.Workspace)
      echo $(Build.ArtifactStagingDirectory)
      echo Moving to one folder
      mkdir -p $(Build.ArtifactStagingDirectory)/report
      mv $(Build.SourcesDirectory)/apps/tests/playwright-report $(Build.ArtifactStagingDirectory)/report/playwright-report
      mv $(Build.SourcesDirectory)/apps/tests/test-results $(Build.ArtifactStagingDirectory)/report/test-results
      ls -la $(Build.ArtifactStagingDirectory)/report
    displayName: 'My little debug'
    condition: succeededOrFailed()

  - publish: $(Build.ArtifactStagingDirectory)/report
    artifact: report
    condition: succeededOrFailed()
#
#  - publish: test-results
#    artifact: test-results
#    condition: succeededOrFailed()
