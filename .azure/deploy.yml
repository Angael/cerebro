trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
- group: cerebro-prod
- name: pnpm_config_cache
  value: $(Pipeline.Workspace)/.pnpm-store
- name: artifactName
  value: cerebro_$(Build.BuildId)
- name: releaseFullPath
  value: $(FTP_RELEASES_DIR)/$(artifactName)

stages:
  - stage: Build
    displayName: 'Install | Lint | Build'
    jobs:
      - job: Build
        steps:
          - script: |
              rm -r ./apps/tests
            displayName: 'Delete tests app'

          - template: steps/pnpm-install.yml
          - template: steps/pnpm-build.yml
          - template: steps/prepare-artifact.yml

  - stage: deployprod
    displayName: 'Deploy to Production'
    dependsOn: Build
    jobs:
    - deployment: Prod
      displayName: 'Deploy to Production'
      environment:
        name: prod
        resourceName: nodejs-s-1vcpu-1gb-fra1-01
        resourceType: VirtualMachine
      strategy:
        rolling:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)
                displayName: 'Download Artifact'

              - script: |
                  rm -r $(releaseFullPath) | exit 0
                  mkdir -p $(releaseFullPath)
                  tar -xzvf $(Pipeline.Workspace)/$(artifactName)/artifact.tar.gz -C $(releaseFullPath)
                displayName: "Create release folder"

              - template: steps/apply-release.yml
                parameters:
                  releaseFullPath: $(releaseFullPath)

              - script: |
                  cd $(FTP_RELEASES_DIR)
                  ls -td -- */ | tail -n +4 | xargs rm -rf
                displayName: "Cleanup old releases"

  - stage: test
    displayName: 'Run tests'
    dependsOn: deployprod
    jobs:
      - job: e2e
        steps:
          - template: steps/e2e-test.yml